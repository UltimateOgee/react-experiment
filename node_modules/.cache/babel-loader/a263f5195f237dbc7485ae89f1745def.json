{"ast":null,"code":"var _jsxFileName = \"/Users/shubhankarsingh/Documents/codebase/react-experiment/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport TodoList from './TodoList';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const todoNameRef = useRef();\n  useEffect(() => {\n    const storedTodos = localStorage.getItem('todoApp.todos');\n    if (storedTodos) setTodos(storedTodos);\n  });\n  useEffect(() => {\n    localStorage.setItem('todoApp.todos', JSON.stringify(todos));\n  }, [todos]);\n\n  function handleClickAddTodo(e) {\n    const name = todoNameRef.current.value;\n    if (name == \"\") return;\n    setTodos(prevTodos => {\n      return [...prevTodos, {\n        id: uuidv4(),\n        name: name,\n        completed: false\n      }];\n    });\n    todoNameRef.current.value = null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TodoList, {\n      todos: todos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: todoNameRef,\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClickAddTodo,\n      children: \"Add Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Clear Completed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"0 left to do\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"qH2GEr92xkIFQxR2Djx4V7Ti/yU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/shubhankarsingh/Documents/codebase/react-experiment/src/App.js"],"names":["React","useState","useRef","useEffect","TodoList","v4","uuidv4","App","todos","setTodos","todoNameRef","storedTodos","localStorage","getItem","setItem","JSON","stringify","handleClickAddTodo","e","name","current","value","prevTodos","id","completed"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAkD,OAAlD;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMS,WAAW,GAAGR,MAAM,EAA1B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,eAArB,CAApB;AACA,QAAGF,WAAH,EAAgBF,QAAQ,CAACE,WAAD,CAAR;AACjB,GAHQ,CAAT;AAKAR,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,YAAY,CAACE,OAAb,CAAqB,eAArB,EAAsCC,IAAI,CAACC,SAAL,CAAeR,KAAf,CAAtC;AACD,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;;AAIA,WAASS,kBAAT,CAA4BC,CAA5B,EAA8B;AAC5B,UAAMC,IAAI,GAAGT,WAAW,CAACU,OAAZ,CAAoBC,KAAjC;AACA,QAAGF,IAAI,IAAI,EAAX,EAAe;AAEfV,IAAAA,QAAQ,CAACa,SAAS,IAAI;AACpB,aAAM,CAAC,GAAGA,SAAJ,EAAe;AAACC,QAAAA,EAAE,EAAEjB,MAAM,EAAX;AAAea,QAAAA,IAAI,EAAEA,IAArB;AAA2BK,QAAAA,SAAS,EAAE;AAAtC,OAAf,CAAN;AACD,KAFO,CAAR;AAIAd,IAAAA,WAAW,CAACU,OAAZ,CAAoBC,KAApB,GAA4B,IAA5B;AACD;;AAED,sBACE;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEb;AAAjB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,GAAG,EAAEE,WAAZ;AAAyB,MAAA,IAAI,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAEO,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA,kBADF;AASD;;GAjCQV,G;;KAAAA,G;AAmCT,eAAeA,GAAf","sourcesContent":["import React, {useState,  useRef, useEffect} from 'react'\nimport TodoList from './TodoList';\nimport { v4 as uuidv4 } from 'uuid';\n\nfunction App() {\n  const [todos, setTodos] = useState([])\n  const todoNameRef = useRef()\n\n  useEffect(() => {\n    const storedTodos = localStorage.getItem('todoApp.todos')\n    if(storedTodos) setTodos(storedTodos)\n  })\n\n  useEffect(() => {\n    localStorage.setItem('todoApp.todos', JSON.stringify(todos))\n  }, [todos])\n\n  function handleClickAddTodo(e){\n    const name = todoNameRef.current.value\n    if(name == \"\") return\n\n    setTodos(prevTodos => {\n      return[...prevTodos, {id: uuidv4(), name: name, completed: false}]\n    })\n\n    todoNameRef.current.value = null\n  }\n\n  return (\n    <>\n      <TodoList todos={todos}/>\n      <input ref={todoNameRef} type=\"text\"/>\n      <button onClick={handleClickAddTodo}>Add Todo</button>\n      <button>Clear Completed</button>\n      <div>0 left to do</div>\n    </>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}