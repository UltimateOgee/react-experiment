[{"/Users/shubhankarsingh/Documents/codebase/react-experiment/src/index.js":"1","/Users/shubhankarsingh/Documents/codebase/react-experiment/src/App.js":"2","/Users/shubhankarsingh/Documents/codebase/react-experiment/src/TodoList.js":"3","/Users/shubhankarsingh/Documents/codebase/react-experiment/src/Todo.js":"4"},{"size":145,"mtime":1624213847069,"results":"5","hashOfConfig":"6"},{"size":1377,"mtime":1624217722470,"results":"7","hashOfConfig":"6"},{"size":246,"mtime":1624217370324,"results":"8","hashOfConfig":"6"},{"size":404,"mtime":1624217528303,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"bwl001",{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/shubhankarsingh/Documents/codebase/react-experiment/src/index.js",[],"/Users/shubhankarsingh/Documents/codebase/react-experiment/src/App.js",["19"],"import React, {useState,  useRef, useEffect} from 'react'\nimport TodoList from './TodoList';\nimport { v4 as uuidv4 } from 'uuid';\n\nfunction App() {\n  const [todos, setTodos] = useState([])\n  const todoNameRef = useRef()\n\n  useEffect(() => {\n    const storedTodos = JSON.parse(localStorage.getItem('todoApp.todos'))\n    if(storedTodos) setTodos(storedTodos)\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem('todoApp.todos', JSON.stringify(todos))\n  }, [todos])\n\n  function toggleTodo(id) {\n    const newTodos = [...todos]\n    const todo = newTodos.find(todo => todo.id === id)\n    todo.completed = !todo.completed\n    setTodos(newTodos)\n  }\n\n  function handleClickAddTodo(e){\n    const name = todoNameRef.current.value\n    if(name == \"\") return\n\n    setTodos(prevTodos => {\n      return[...prevTodos, {id: uuidv4(), name: name, completed: false}]\n    })\n\n    todoNameRef.current.value = null\n  }\n\n  function handleClearTodos() {\n    const newTodos = todos.filter(todo => !todo.completed)\n    setTodos(newTodos)\n  }\n\n  return (\n    <>\n      <TodoList todos={todos} toggleTodo={toggleTodo}/>\n      <input ref={todoNameRef} type=\"text\"/>\n      <button onClick={handleClickAddTodo}>Add Todo</button>\n      <button onClick={handleClearTodos}>Clear Completed</button>\n      <div>{todos.filter(todo => !todo.completed).length} left to do</div>\n    </>\n  )\n}\n\nexport default App;\n","/Users/shubhankarsingh/Documents/codebase/react-experiment/src/TodoList.js",[],"/Users/shubhankarsingh/Documents/codebase/react-experiment/src/Todo.js",[],{"ruleId":"20","severity":1,"message":"21","line":27,"column":13,"nodeType":"22","messageId":"23","endLine":27,"endColumn":15},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]